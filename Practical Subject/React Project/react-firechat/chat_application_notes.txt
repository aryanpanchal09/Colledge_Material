npx create-react-app react-firechat
npm config set legacy-peer-deps true
npm install --save react react-dom @types/react @types/react-dom
npm install --save-dev ajv@^7
npm i --save firebase

$env:NODE_OPTIONS = "--openssl-legacy-provider"


SETTING UP FIREBASE DEPENDENCIES  
--------------------------------
Note - add firebase/compat instead of just firebase while importing 

// Firebase deps 
import firebase from 'firebase/app';
import 'firebase/auth';
import 'firebase/firestore';

Methods has been changed in google firebase application for signIn and singOut 

firebase.initializeApp({
  
})

{
    import Button from './components/Button';
import React, { useState, useEffect } from 'react';

// Firebase deps 
import firebase from 'firebase/compat/app';
import 'firebase/compat/auth';
import 'firebase/compat/firestore';

firebase.initializeApp({
  apiKey: "AIzaSyCNFuju29C9b_DDUBoJ2n6uHwKxKtqsdJ0",
  authDomain: "react-firechat-eb096.firebaseapp.com",
  projectId: "react-firechat-eb096",
  storageBucket: "react-firechat-eb096.firebasestorage.app",
  messagingSenderId: "617137488131",
  appId: "1:617137488131:web:b3246648c7a5c83baaa936",
});

const auth = firebase.auth();

function App() {
  const [user, setUser] = useState(() => auth.currentUser);
  const [initializing, setInitializing] = useState(true);

  useEffect(() => {
    const unsubscribe = auth.onAuthStateChanged(user => {
      if (user) {
        setUser(user);
      } else {
        setUser(null);
      }
      if (initializing) {
        setInitializing(false);
      }
    });

    return unsubscribe;
  }, []);

  const signInWithGoogle = async () => {
    const provider = new firebase.auth.GoogleAuthProvider();
    auth.useDeviceLanguage();
    try {
      await auth.signInWithGoogle(provider);
    } catch (error) {
      console.log(error);
    }
  };

  const signOut = async () => {
    try {
      await firebase.auth().signOut();
    } catch (error) {
      console.log(error.message);
    }
  };

  if (initializing) return 'Loading ...';

  return (
    <div>
      {user ? (
          'Welcome to the chat'
        ) : (
          <Button onClick={signInWithGoogle}>Sign In With Google</Button>
        )}
    </div>
  );
}

export default App;
}